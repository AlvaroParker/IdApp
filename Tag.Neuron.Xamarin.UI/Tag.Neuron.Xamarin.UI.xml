<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tag.Neuron.Xamarin.UI</name>
    </assembly>
    <members>
        <member name="T:Tag.Neuron.Xamarin.UI.AppResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.ErrorTitle">
            <summary>
              Looks up a localized string similar to An error has occurred.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.FailedToBindViewModelForPage">
            <summary>
              Looks up a localized string similar to Failed to bind viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.FailedToRestoreViewModelStateForPage">
            <summary>
              Looks up a localized string similar to Failed to restore state for viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.FailedToSaveViewModelStateForPage">
            <summary>
              Looks up a localized string similar to Failed to save state for viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.AppResources.FailedToUnbindViewModelForPage">
            <summary>
              Looks up a localized string similar to Failed to unbind viewmodel {0} for page {1}.
            </summary>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToClickedBehavior">
            <summary>
            Used for moving focus to the next UI component when a button has been clicked.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToClickedBehavior.ScrollTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToClickedBehavior.OnAttachedTo(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToClickedBehavior.OnDetachingFrom(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToClickedBehavior.MakeVisible(Xamarin.Forms.View)">
            <summary>
            Scrolls to make an element visisble.
            </summary>
            <param name="Element">Element to make visible.</param>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToCompletedBehavior">
            <summary>
            Used for moving focus to the next UI component when the Enter/Return key has been hit.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToCompletedBehavior.ScrollTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToCompletedBehavior.OnAttachedTo(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToCompletedBehavior.OnDetachingFrom(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToSelectedBehavior">
            <summary>
            Used for moving focus to the next UI component when an item has been selected.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToSelectedBehavior.ScrollTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToSelectedBehavior.OnAttachedTo(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.ScrollToSelectedBehavior.OnDetachingFrom(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnClickedBehavior">
            <summary>
            Used for moving focus to the next UI component when a button has been clicked.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnClickedBehavior.SetFocusTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnClickedBehavior.OnAttachedTo(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnClickedBehavior.OnDetachingFrom(Xamarin.Forms.Button)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnClickedBehavior.FocusOn(Xamarin.Forms.View)">
            <summary>
            Sets focus on an element.
            </summary>
            <param name="Element">Element to focus on.</param>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnCompletedBehavior">
            <summary>
            Used for moving focus to the next UI component when the Enter/Return key has been hit.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnCompletedBehavior.SetFocusTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnCompletedBehavior.OnAttachedTo(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnCompletedBehavior.OnDetachingFrom(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnSelectedBehavior">
            <summary>
            Used for moving focus to the next UI component when an item has been selected.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnSelectedBehavior.SetFocusTo">
            <summary>
            The view to move focus to.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnSelectedBehavior.OnAttachedTo(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.SetFocusOnSelectedBehavior.OnDetachingFrom(Xamarin.Forms.Picker)">
            <inheritdoc/>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior">
            <summary>
            A behavior for being able to bind an <see cref="T:Xamarin.Forms.Entry"/>'s TextChanged event to an <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="F:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior.TextChangedCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior.TextChangedCommand">
            <summary>
            The command to bind to when text changes.
            </summary>
        </member>
        <member name="F:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior.TextChangedCommandParameterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior.TextChangedCommandParameter">
            <summary>
            The command parameter to bind to when text changes.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior.OnAttachedTo(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Behaviors.TextChangedBehavior.OnDetachingFrom(Xamarin.Forms.Entry)">
            <inheritdoc/>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Extensions.CommandExtensions">
            <summary>
            Helper/convenience methods for the <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Extensions.CommandExtensions.ChangeCanExecute(System.Windows.Input.ICommand)">
            <summary>
            Calls the <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> method on the given <see cref="T:System.Windows.Input.ICommand"/>, given that it <b>is</b> a <see cref="T:Xamarin.Forms.Command"/>.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Extensions.CommandExtensions.Execute(System.Windows.Input.ICommand)">
            <summary>
            Calls the <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)"/> method with a <c>null</c> argument, given that the command <em>can</em> be executed (<see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)"/>).
            </summary>
            <param name="command"></param>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel">
            <summary>
            A base class for all view models, inheriting from the <see cref="T:Xamarin.Forms.BindableObject"/>.
            This class provides default implementations for the <see cref="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.DoBind"/> and <see cref="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.DoUnbind"/> methods.
            Override those to implement setup/teardown when a page/view is appearing and disappearing to/from the screen respectively.
            <br/>
            NOTE: using this class requires your page/view to inherit from <see cref="T:Tag.Neuron.Xamarin.UI.Views.ContentBasePage"/>.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.#ctor">
            <summary>
            Create an instance of a <see cref="T:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel"/>.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsBound">
            <summary>
            Returns <c>true</c> if the viewmodel is bound, i.e. its parent page has appeared on screen.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Bind">
            <summary>
            Called by the parent page when it appears on screen.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Unbind">
            <summary>
            Called by the parent page when it disappears from screen.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Children">
            <summary>
            Gets the child view models.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.AddChildViewModel``1(``0)">
            <summary>
            Use this method when nesting view models. This is the viewmodel equivalent of master/detail pages.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <param name="childViewModel">The child viewmodel to add.</param>
            <returns>Child view model</returns>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.RemoveChildViewModel``1(``0)">
            <summary>
            Use this method when nesting view models. This is the viewmodel equivalent of master/detail pages.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <param name="childViewModel">The child viewmodel to remove.</param>
            <returns>Child view model</returns>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.DoBind">
            <summary>
            Override this method to do view model specific setup when it's parent page/view appears on screen.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.DoUnbind">
            <summary>
            Override this method to do view model specific teardown when it's parent page/view disappears from screen.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.RestoreState">
            <summary>
            Called by the parent page when it appears on screen, <em>after</em> the <see cref="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Bind"/> method is called.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.SaveState">
            <summary>
            Called by the parent page when it disappears on screen, <em>before</em> the <see cref="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Unbind"/> method is called.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Shutdown">
            <summary>
            Convenience method that calls <see cref="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.SaveState"/> and then <see cref="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.Unbind"/>.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.DoRestoreState">
            <summary>
            Override this method to do view model specific restoring of state when it's parent page/view appears on screen.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.DoSaveState">
            <summary>
            Override this method to do view model specific saving of state when it's parent page/view disappears from screen.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.GetSettingsKey(System.String)">
            <summary>
            Helper method for getting a unique settings key for a given property.
            </summary>
            <param name="propertyName">The property name to convert into a settings key.</param>
            <returns>Key name</returns>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.EvaluateCommands(System.Windows.Input.ICommand[])">
            <summary>
            Executes the <see cref="M:Xamarin.Forms.Command.ChangeCanExecute"/> method on all commands.
            This is done to update the UI state for those UI components that bind to a command.
            </summary>
            <param name="commands">The commands to evaluate.</param>
        </member>
        <member name="F:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsBusyProperty">
            <summary>
            <see cref="P:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsBusy"/>
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsBusy">
            <summary>
            A helper property to set/get when the ViewModel is busy doing work.
            </summary>
        </member>
        <member name="F:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsIdleProperty">
            <summary>
            <see cref="P:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsIdle"/>
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel.IsIdle">
            <summary>
            A helper property to set/get when the ViewModel is idle.
            </summary>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Views.ContentBasePage">
            <summary>
            A base class for all pages. This class works in close conjunction with the <see cref="T:Tag.Neuron.Xamarin.UI.ViewModels.BaseViewModel"/> for binding and unbinding data
            when the page is shown on screen.
            </summary>
            <remarks>It also handles safe area insets for iOS applications, specifically on iPhones with the 'rabbit ear' displays.</remarks>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Tag.Neuron.Xamarin.UI.Views.ContentBasePage"/> class.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.#ctor(Tag.Neuron.Xamarin.Services.ILogService,Tag.Neuron.Xamarin.Services.ISettingsService,Tag.Neuron.Xamarin.IUiDispatcher)">
            <summary>
            Creates an instance of the <see cref="T:Tag.Neuron.Xamarin.UI.Views.ContentBasePage"/> class.
            For unit tests.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.ViewModel">
            <summary>
            Typed convenience property for accessing the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> property as a view model.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.GetViewModel``1">
            <summary>
            Returns the viewmodel, type cast to the proper type.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <returns>View model</returns>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.OnDisappearing">
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBasePage.ForceReRender(Xamarin.Forms.Layout[])">
            <summary>
            TODO: remove this, as it shouldn't be needed. It's here because ScrollView's typically don't refresh when their child content changes size.
            It's a helper method for forcing a layout re-render of the specified components. It will do so asynchronously, by executing a BeginInvoke.
            </summary>
            <param name="layouts">The layout components to re-render.</param>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Views.ContentBaseView">
            <summary>
            A convenience base class for <see cref="T:Xamarin.Forms.ContentView"/>s which provides typed access to the viewmodel it is bound to.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Views.ContentBaseView.ViewModel">
            <summary>
            Typed convenience property for accessing the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> property as a view model.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ContentBaseView.GetViewModel``1">
            <summary>
            Returns the viewmodel, type cast to the proper type.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <returns>View model</returns>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Views.FlipView">
            <summary>
            The FlipView is a user control that holds two child controls: a <see cref="P:Tag.Neuron.Xamarin.UI.Views.FlipView.FrontView"/> and a <see cref="P:Tag.Neuron.Xamarin.UI.Views.FlipView.BackView"/>.
            It can be flipped like a coin when the user taps on it. In order to flip the view, simply call the <see cref="M:Tag.Neuron.Xamarin.UI.Views.FlipView.Flip"/> method.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.FlipView.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Tag.Neuron.Xamarin.UI.Views.FlipView"/> control.
            </summary>
        </member>
        <member name="F:Tag.Neuron.Xamarin.UI.Views.FlipView.FrontViewProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Views.FlipView.FrontView">
            <summary>
            The view displayed on the 'front' side of this user control.
            </summary>
        </member>
        <member name="F:Tag.Neuron.Xamarin.UI.Views.FlipView.BackViewProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Views.FlipView.BackView">
            <summary>
            The view displayed on the 'back' side of this user control.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.FlipView.Flip">
            <summary>
            Makes the user control flip from front to back, or the other way around.
            </summary>
        </member>
        <member name="T:Tag.Neuron.Xamarin.UI.Views.ShellBasePage">
            <summary>
            A base class for <see cref="T:Xamarin.Forms.Shell"/> pages. This class provides easy, typed, access to the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> as a view model.
            It also handles safe area insets for iOS when the phone has a 'rabbit ear' display.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ShellBasePage.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Tag.Neuron.Xamarin.UI.Views.ShellBasePage"/> class.
            </summary>
        </member>
        <member name="P:Tag.Neuron.Xamarin.UI.Views.ShellBasePage.ViewModel">
            <summary>
            Typed convenience property for accessing the <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> property as a view model.
            </summary>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ShellBasePage.GetViewModel``1">
            <summary>
            Returns the viewmodel, type cast to the proper type.
            </summary>
            <typeparam name="T">The viewmodel type.</typeparam>
            <returns>View model</returns>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ShellBasePage.OnAppearing">
            Due to a bug in Xamarin Forms (https://github.com/xamarin/xamarin.forms/issues/6486)
            these two methods aren't called at startup for now. But we're leaving the methods here for the future.
            <inheritdoc/>
        </member>
        <member name="M:Tag.Neuron.Xamarin.UI.Views.ShellBasePage.OnDisappearing">
            <inheritdoc/>
        </member>
    </members>
</doc>
