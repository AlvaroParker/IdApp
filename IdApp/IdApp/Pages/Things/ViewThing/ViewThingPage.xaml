<?xml version="1.0" encoding="utf-8" ?>
<views:ContentBasePage xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:views="clr-namespace:IdApp.Pages;assembly=IdApp"
                       xmlns:conv="clr-namespace:IdApp.Converters;assembly=IdApp"
                       xmlns:resx="clr-namespace:IdApp.Resx;assembly=IdApp"
                       xmlns:model="clr-namespace:IdApp.Pages.Things.ViewThing;assembly=IdApp"
                       xmlns:objectmodel="clr-namespace:IdApp.Pages.Things;assembly=IdApp"
                       xmlns:objectmodel2="clr-namespace:IdApp.Pages.Contracts.MyContracts.ObjectModels;assembly=IdApp"
                       x:DataType="model:ViewThingModel"
                       x:Class="IdApp.Pages.Things.ViewThing.ViewThingPage"
                       Style="{StaticResource BaseBackgroundPage}"
                       Title="{x:Static resx:AppResources.Thing}">
    <Grid>
        <ScrollView>
            <StackLayout Margin="{StaticResource DefaultMargin}">
                <!-- TAGS -->
                <Label Text="{x:Static resx:AppResources.InformationAboutThing}" Style="{StaticResource Heading}" Margin="{StaticResource DefaultTopOnlyMargin}" VerticalOptions="Start"/>
                <Label Text="{x:Static resx:AppResources.InformationAboutThingText}" Style="{StaticResource InfoText}" VerticalOptions="Start"/>
                <StackLayout x:Name="TagLayout" Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=Tags}" VerticalOptions="StartAndExpand" Margin="{StaticResource DefaultMargin}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="objectmodel:HumanReadableTag">
                            <StackLayout Orientation="Horizontal">
                                <Label Text="{Binding Path=LocalizedName}" Style="{StaticResource KeyLabel}" LineBreakMode="WordWrap" WidthRequest="100"/>
                                <Label LineBreakMode="WordWrap" Text="{Binding Path=LocalizedValue}" Style="{StaticResource ClickableValueLabel}">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.ClickCommand, Source={x:Reference TagLayout}}" CommandParameter="{Binding}" />
                                    </Label.GestureRecognizers>
                                </Label>
                            </StackLayout>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </StackLayout>
				<!-- NOTIFICATIONS -->
				<Label Text="{x:Static resx:AppResources.Notifications}" Style="{StaticResource Heading}" Margin="{StaticResource DefaultTopOnlyMargin}"
					   VerticalOptions="Start" IsVisible="{Binding HasNotifications}"/>
				<Label Text="{x:Static resx:AppResources.NotificationsText}" Style="{StaticResource InfoText}" VerticalOptions="Start"
					   IsVisible="{Binding HasNotifications}"/>
				<StackLayout x:Name="Notifications" Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=Notifications}" VerticalOptions="StartAndExpand" Margin="{StaticResource DefaultMargin}">
					<BindableLayout.ItemTemplate>
						<DataTemplate x:DataType="objectmodel2:EventModel">
							<Grid ColumnDefinitions="auto,*,auto" RowDefinitions="auto,auto" Padding="5,5,5,5">
								<Label Grid.Column="0" Grid.Row="0" LineBreakMode="NoWrap" Padding="5,2,5,0"
									   Text="{Binding Path=Received, Converter={conv:DateToString}}"
									   HorizontalOptions="Center" VerticalOptions="Center"/>
								<Label Grid.Column="0" Grid.Row="1" LineBreakMode="NoWrap" Padding="5,0,5,2"
									   Text="{Binding Path=Received, Converter={conv:TimeToString}}"
									   HorizontalOptions="Center" VerticalOptions="Center"/>
								<Label Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" LineBreakMode="CharacterWrap" TextType="Text"
									   HorizontalTextAlignment="Start" VerticalTextAlignment="Center" Padding="5,2,5,2"
									   Text="{Binding Path=Description}" Style="{StaticResource ClickableValueLabel}"/>
								<Label Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" LineBreakMode="NoWrap" Padding="5,2,5,0"
									   Text="{Binding Path=Icon}" FontFamily="{StaticResource FontAwesomeSolid}"
									   HorizontalOptions="Center" VerticalOptions="Center"/>
								<Label Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" LineBreakMode="NoWrap" Padding="5,2,5,0"
									   Text="•" FontSize="50" HorizontalOptions="End" VerticalOptions="Center"
									   Style="{StaticResource AlertLabel}"/>
								<Grid.GestureRecognizers>
									<TapGestureRecognizer Command="{Binding ClickedCommand}" CommandParameter="{Binding .}"/>
								</Grid.GestureRecognizers>
							</Grid>
						</DataTemplate>
					</BindableLayout.ItemTemplate>
				</StackLayout>
				<!-- BUTTONS -->
				<Button Text="{x:Static resx:AppResources.ReadSensor}" Command="{Binding Path=ReadSensorCommand}" IsEnabled="{Binding Path=IsConnected}"
						IsVisible="{Binding IsSensor}" Margin="{StaticResource DefaultBottomOnlyMargin}"/>
				<Button Text="{x:Static resx:AppResources.ControlActuator}" Command="{Binding Path=ControlActuatorCommand}" IsEnabled="{Binding Path=IsConnected}"
						IsVisible="{Binding IsActuator}" Margin="{StaticResource DefaultBottomOnlyMargin}"/>
				<Button Text="{x:Static resx:AppResources.AddToList}" Command="{Binding Path=AddToListCommand}" 
						IsVisible="{Binding InContacts, Converter={conv:LogicalNot}}" Margin="{StaticResource DefaultBottomOnlyMargin}"/>
				<Button Text="{x:Static resx:AppResources.RemoveFromList}" Command="{Binding Path=RemoveFromListCommand}" 
						IsVisible="{Binding InContactsAndNotOwner}" Margin="{StaticResource DefaultBottomOnlyMargin}"/>
				<Button Text="{x:Static resx:AppResources.DeleteRules}" Command="{Binding Path=DeleteRulesCommand}" IsEnabled="{Binding Path=IsConnected}"
						IsVisible="{Binding IsOwner}" Margin="{StaticResource DefaultBottomOnlyMargin}"/>
				<Button Text="{x:Static resx:AppResources.DisownThing}" Command="{Binding Path=DisownThingCommand}" IsEnabled="{Binding Path=IsConnected}"
						IsVisible="{Binding IsOwner}" Margin="{StaticResource DefaultBottomOnlyMargin}"/>
			</StackLayout>
        </ScrollView>
    </Grid>
</views:ContentBasePage>
