<?xml version="1.0" encoding="UTF-8"?>
<views:ContentBaseView xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:helpers="clr-namespace:IdApp.Helpers;assembly=IdApp"
                       xmlns:templatedSwitch="clr-namespace:IdApp.Controls.TemplatedSwitch;assembly=IdApp"
                       xmlns:resx="clr-namespace:IdApp.Resx;assembly=IdApp"
					   xmlns:tag="clr-namespace:IdApp.Services.Tag;assembly=IdApp"
                       xmlns:views="clr-namespace:IdApp.Pages;assembly=IdApp"
                       xmlns:behaviors="clr-namespace:IdApp.Behaviors;assembly=IdApp"
                       xmlns:converters="clr-namespace:IdApp.Converters;assembly=IdApp"
                       xmlns:model="clr-namespace:IdApp.Pages.Registration.DefinePin;assembly=IdApp"
                       x:DataType="model:DefinePinViewModel"
                       x:Class="IdApp.Pages.Registration.DefinePin.DefinePinView">
	<ContentView.Content>
		<StackLayout Margin="{StaticResource DefaultMargin}" x:Name="PinContent">
			<Label Text="{x:Static resx:AppResources.YouCanProtectYourWalletPinInfo}" HorizontalOptions="Center" VerticalOptions="Start" Margin="{StaticResource DefaultBottomOnlyMargin}" />

			<Label Text="{x:Static resx:AppResources.PinOrPassword}"/>
			<Grid>
				<Entry
                    x:Name="PinEntry"
                    IsPassword="True"
                    helpers:PasswordMask.IsEnabled="{Binding IsToggled, Source={Reference PinEntryPasswordToggler}}"
                    Text="{Binding Path=Pin}">
					<Entry.Behaviors>
						<behaviors:SetFocusOnCompletedBehavior
                            SetFocusTo="RetypePinEntry"
                            BindingContext="{Binding BindingContext, Source={x:Reference PinContent}}"/>
					</Entry.Behaviors>
				</Entry>
				<templatedSwitch:TemplatedSwitch
                    x:Name="PinEntryPasswordToggler"
                    Style="{StaticResource PasswordToggler}"
                    HorizontalOptions="End"
                    VerticalOptions="Center" />
			</Grid>
			<Label
                Text="{Binding Path=PinStrength, Converter={converters:PinStrengthToErrorMessage}}"
                IsVisible="False"
                TextColor="{StaticResource AlertColor}"
                Margin="{StaticResource DefaultBottomOnlyMargin}" >
				<Label.Triggers>
					<MultiTrigger TargetType="Label">
						<MultiTrigger.Conditions>
							<BindingCondition Binding="{Binding Path=PinStrength, Converter={converters:EqualsParameter}, ConverterParameter={Static tag:PinStrength.Strong}}" Value="False" />
							<BindingCondition Binding="{Binding Path=EnteringPinStarted}" Value="True" />
						</MultiTrigger.Conditions>
						<Setter Property="IsVisible" Value="True" />
					</MultiTrigger>
				</Label.Triggers>
			</Label>

			<Label Text="{x:Static resx:AppResources.RetypePinOrPassword}"/>
			<Grid>
				<Entry
                    x:Name="RetypePinEntry"
                    IsPassword="True"
                    helpers:PasswordMask.IsEnabled="{Binding IsToggled, Source={Reference RetypePinEntryPasswordToggler}}"
                    Text="{Binding Path=RetypedPin}">
					<Entry.Behaviors>
						<behaviors:SetFocusOnCompletedBehavior
                            SetFocusTo="OkButton"
                            BindingContext="{Binding BindingContext, Source={x:Reference PinContent}}"/>
					</Entry.Behaviors>
				</Entry>
				<templatedSwitch:TemplatedSwitch
                    x:Name="RetypePinEntryPasswordToggler"
                    Style="{StaticResource PasswordToggler}"
                    HorizontalOptions="End"
                    VerticalOptions="Center" />
			</Grid>

			<Label
                Text="{x:Static resx:AppResources.PinsDoNotMatch}"
                IsVisible="{Binding Path=PinsDoNotMatch}"
                TextColor="{StaticResource AlertColor}"
                Margin="{StaticResource DefaultBottomOnlyMargin}" />
			<Label x:Name="ConnectionState" HorizontalOptions="CenterAndExpand" Text="{Binding Path=ConnectionStateText}" IsVisible="{Binding Path=IsConnected, Converter={converters:LogicalNot}}"/>

			<Button x:Name="OkButton" Text="{x:Static resx:AppResources.Ok}" Command="{Binding Path=ContinueCommand}" Margin="{StaticResource DefaultTopOnlyMargin}" />
			<Button x:Name="SkipButton" Text="{x:Static resx:AppResources.Skip}" Command="{Binding Path=SkipCommand}" />
		</StackLayout>
	</ContentView.Content>
</views:ContentBaseView>
