<?xml version="1.0" encoding="utf-8" ?>
<views:ContentBasePage xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:views="clr-namespace:IdApp.Pages;assembly=IdApp"
                       xmlns:resx="clr-namespace:IdApp.Resx;assembly=IdApp"
                       xmlns:model="clr-namespace:IdApp.Pages.Contacts.Chat;assembly=IdApp"
                       xmlns:messages="clr-namespace:IdApp.Services.Messages;assembly=IdApp"
                       xmlns:behaviors="clr-namespace:IdApp.Behaviors;assembly=IdApp"
                       xmlns:loading="clr-namespace:IdApp.Controls.LoadingListView;assembly=IdApp"
                       xmlns:converters="clr-namespace:IdApp.Converters;assembly=IdApp"
                       x:DataType="model:ChatViewModel"
                       x:Class="IdApp.Pages.Contacts.Chat.ChatPage"
                       Title="{Binding Path=FriendlyName}">
    <views:ContentBasePage.Resources>
        <DataTemplate x:Key="SentMessage" x:DataType="messages:ChatMessage">
            <ViewCell>
                <Frame HorizontalOptions="StartAndExpand" Rotation="180" BackgroundColor="LightYellow" 
                       Padding="5" CornerRadius="5" Margin="2" BorderColor="Yellow">
                    <ContentView Content="{Binding Path=ParsedXaml}" HorizontalOptions="Start"/>
                </Frame>
            </ViewCell>
        </DataTemplate>
        <DataTemplate x:Key="ReceivedMessage" x:DataType="messages:ChatMessage">
            <ViewCell>
                <Frame HorizontalOptions="EndAndExpand" Rotation="180" BackgroundColor="LightBlue" 
                       Padding="5" CornerRadius="5" Margin="2" BorderColor="SkyBlue">
                    <ContentView Content="{Binding Path=ParsedXaml}" HorizontalOptions="End"/>
                </Frame>
            </ViewCell>
        </DataTemplate>
        <DataTemplate x:Key="OtherItems" x:DataType="messages:ChatMessage">
            <ViewCell>
                <Frame HorizontalOptions="CenterAndExpand" Rotation="180" BackgroundColor="LightSalmon" 
                       Padding="5" CornerRadius="5" Margin="2" BorderColor="Salmon">
                    <ContentView Content="{Binding Path=ParsedXaml}" HorizontalOptions="Center"/>
                </Frame>
            </ViewCell>
        </DataTemplate>
        <messages:MessageTypeTemplateSelector x:Key="MessageStyleSelector" 
                                              SentTemplate="{StaticResource SentMessage}" 
                                              ReceivedTemplate="{StaticResource ReceivedMessage}" 
                                              DefaultTemplate="{StaticResource OtherItems}"/>
    </views:ContentBasePage.Resources>
    <StackLayout Margin="{StaticResource DefaultMargin}">
        <loading:LoadingListView x:Name="Messages" ItemsSource="{Binding Path=Messages}" ItemTemplate="{StaticResource MessageStyleSelector}" 
                                 HasUnevenRows="True" VerticalOptions="StartAndExpand" Rotation="180" SeparatorVisibility="None" 
                                 LoadMoreCommand="{Binding Path=LoadMoreMessages}" ItemSelectedCommand="{Binding Path=MessageSelected}"/>
        <Frame BorderColor="Black" CornerRadius="5" Padding="5">
            <Grid x:Name="ControlGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Editor x:Name="EditorControl" Grid.Column="0" Grid.Row="0" Text="{Binding MarkdownInput}" HorizontalOptions="StartAndExpand" 
                        AutoSize="TextChanges" Keyboard="Chat"/>
                <StackLayout Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
                    <Button Text="{x:Static resx:FontAwesome.Camera}" IsVisible="{Binding Path=IsWriting, Converter={converters:LogicalNot}}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding TakePhoto}" 
                        HorizontalOptions="End" VerticalOptions="Center"/>
                    <Button Text="{x:Static resx:FontAwesome.PaperClip}" IsVisible="{Binding Path=IsWriting, Converter={converters:LogicalNot}}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding EmbedFile}" 
                        HorizontalOptions="End" VerticalOptions="Center"/>
                    <Button Text="{x:Static resx:FontAwesome.User}" IsVisible="{Binding Path=IsWriting, Converter={converters:LogicalNot}}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding EmbedId}" 
                        HorizontalOptions="End" VerticalOptions="Center"/>
                    <Button Text="{x:Static resx:FontAwesome.Paragraph}" IsVisible="{Binding Path=IsWriting, Converter={converters:LogicalNot}}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding EmbedContract}" 
                        HorizontalOptions="End" VerticalOptions="Center"/>
                    <Button Text="{x:Static resx:FontAwesome.MoneyBill}" IsVisible="{Binding Path=IsWriting, Converter={converters:LogicalNot}}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding EmbedMoney}" 
                        HorizontalOptions="End" VerticalOptions="Center"/>
                    <Button Text="{x:Static resx:FontAwesome.Things}" IsVisible="{Binding Path=IsWriting, Converter={converters:LogicalNot}}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding EmbedThing}" 
                        HorizontalOptions="End" VerticalOptions="Center"/>
                    <Button Text="{x:Static resx:FontAwesome.PaperPlane}" IsVisible="{Binding Path=IsWriting}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding SendCommand}" 
                        HorizontalOptions="End" VerticalOptions="Center">
                        <Button.Behaviors>
                            <behaviors:UnfocusOnClickedBehavior UnfocusControl="EditorControl"/>
                        </Button.Behaviors>
                    </Button>
                    <Button Text="{x:Static resx:FontAwesome.WindowClose}" IsVisible="{Binding Path=IsWriting}"
                        FontFamily="{StaticResource FontAwesomeSolid}" TextColor="White" FontSize="Medium"
                        CornerRadius="8" WidthRequest="40" HeightRequest="40" Command="{Binding CancelCommand}" 
                        HorizontalOptions="End" VerticalOptions="Center">
                        <Button.Behaviors>
                            <behaviors:UnfocusOnClickedBehavior UnfocusControl="EditorControl"/>
                        </Button.Behaviors>
                    </Button>
                </StackLayout>
            </Grid>
            <Frame.Behaviors>
                <behaviors:SetFocusOnTappedBehavior SetFocusTo="EditorControl" BindingContext="{Binding BindingContext, Source={x:Reference ControlGrid}}"/>
            </Frame.Behaviors>
        </Frame>
    </StackLayout>
</views:ContentBasePage>