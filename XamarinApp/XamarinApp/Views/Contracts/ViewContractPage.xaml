<?xml version="1.0" encoding="utf-8" ?>
<views:ContentBasePage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:XamarinApp;assembly=XamarinApp"
             xmlns:converters="clr-namespace:XamarinApp.Views.Converters;assembly=XamarinApp"
             xmlns:contracts="clr-namespace:XamarinApp.Views.Contracts;assembly=XamarinApp"
             xmlns:views="clr-namespace:Tag.Sdk.UI.Views;assembly=Tag.Sdk.UI"
             x:Class="XamarinApp.Views.Contracts.ViewContractPage"
             Title="{x:Static local:AppResources.ViewContract}">
    <ScrollView>
        <StackLayout Margin="{StaticResource DefaultMargin}" x:Name="ContractStackLayout">
            <StackLayout.Resources>
                <ResourceDictionary>
                    <DataTemplate x:Key="ContractHumanReadableText1Template">
                        <Label />
                    </DataTemplate>

                    <contracts:ContractHumanReadableTextDataTemplateSelector
                        x:Key="ContractHumanReadableTextTemplateSelector"
                        HumanReadableText1="{StaticResource ContractHumanReadableText1Template}" />

                    <Style TargetType="Label" x:Key="ValueLabel">
                        <Setter Property="FontAttributes" Value="Bold"/>
                        <Setter Property="LineBreakMode" Value="WordWrap"/>
                    </Style>
                    <Style TargetType="Label" x:Key="KeyLabel">
                        <Setter Property="MinimumWidthRequest" Value="100"/>
                        <Setter Property="LineBreakMode" Value="NoWrap"/>
                    </Style>
                    <Style TargetType="Label" x:Key="InfoText">
                        <Setter Property="HorizontalOptions" Value="Center"/>
                        <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
                        <Setter Property="FontSize" Value="Medium"/>
                    </Style>

                </ResourceDictionary>
            </StackLayout.Resources>

            <Label Text="{x:Static local:AppResources.GeneralInformation}" Style="{StaticResource Heading}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.GeneralInformationInfoText}" Style="{StaticResource InfoText}" />
            <StackLayout Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=GeneralInformation}">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}"/>
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>

            <Image x:Name="QrCode" Source="{Binding Path=QrCode}" IsVisible="{Binding Path=HasQrCode}" WidthRequest="{Binding Path=QrCodeWidth, Mode=OneTime}" HeightRequest="{Binding Path=QrCodeHeight, Mode=OneTime}" HorizontalOptions="CenterAndExpand" Margin="{StaticResource DefaultTopOnlyMargin}" />

            <Label Text="{x:Static local:AppResources.Roles}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasRoles}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.RolesInfoText}" Style="{StaticResource InfoText}" IsVisible="{Binding Path=HasRoles}"/>
            <StackLayout Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=ContractRoles}" IsVisible="{Binding Path=HasRoles}">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}"/>
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>

            <Label Text="{x:Static local:AppResources.Parts}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasParts}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.PartsInfoText}" Style="{StaticResource InfoText}" IsVisible="{Binding Path=HasParts}"  />
            <StackLayout Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=ContractParts}" IsVisible="{Binding Path=HasParts}" >
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Path=DisplayPartCommand, Source={x:Reference ContractStackLayout}}" CommandParameter="{Binding Path=LegalId}" />
                            </StackLayout.GestureRecognizers>
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}"/>
                            <Button Text="{Binding Path=SignAsRoleText}" IsVisible="{Binding Path=CanSign}" Command="{Binding Path=SignPartAsRoleCommand, Source={x:Reference ContractStackLayout}}" CommandParameter="{Binding Path=SignAsRole}" />
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>

            <Label Text="{x:Static local:AppResources.Parameters}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasParameters}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.ParametersInfoText}" Style="{StaticResource InfoText}" IsVisible="{Binding Path=HasParameters}" />
            <StackLayout Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=ContractParameters}" IsVisible="{Binding Path=HasParameters}" >
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}" TextType="{Binding Path=IsHtml, Converter={converters:BooleanToTextTypeConverter}}"/>
                            <Button Text="{Binding Path=SignAsRoleText}" IsVisible="{Binding Path=CanSign}" Command="{Binding Path=SignPartAsRoleCommand, Source={x:Reference ContractStackLayout}}" CommandParameter="{Binding Path=SignAsRole}" />
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>

            <Label Text="{x:Static local:AppResources.HumanReadableText}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasHumanReadableText}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <StackLayout Orientation="Vertical" Spacing="0" BindableLayout.ItemsSource="{Binding Path=ContractHumanReadableText}" IsVisible="{Binding Path=HasHumanReadableText}" BindableLayout.ItemTemplate="{StaticResource ContractHumanReadableTextTemplateSelector}" />

            <Label Text="{x:Static local:AppResources.MachineReadableText}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasMachineReadableText}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.MachineReadableInfoText}" Style="{StaticResource InfoText}" IsVisible="{Binding Path=HasMachineReadableText}" />
            <StackLayout Orientation="Vertical" Spacing="0" BindableLayout.ItemsSource="{Binding Path=ContractMachineReadableText}" IsVisible="{Binding Path=HasMachineReadableText}">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}" />
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>

                <Label Text="{x:Static local:AppResources.ClientSignatures}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasClientSignatures}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.ClientSignaturesInfoText}" Style="{StaticResource InfoText}" IsVisible="{Binding Path=HasClientSignatures}" />
            <StackLayout Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=ContractClientSignatures}" IsVisible="{Binding Path=HasClientSignatures}" >
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Path=DisplayClientSignatureCommand, Source={x:Reference ContractStackLayout}}" CommandParameter="{Binding Path=LegalId}" />
                            </StackLayout.GestureRecognizers>
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}"/>
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>

            <Label Text="{x:Static local:AppResources.ServerSignatures}" Style="{StaticResource Heading}" IsVisible="{Binding Path=HasServerSignatures}" Margin="{StaticResource DefaultTopOnlyMargin}" />
            <Label Text="{x:Static local:AppResources.ServerSignaturesInfoText}" Style="{StaticResource InfoText}" IsVisible="{Binding Path=HasServerSignatures}" />
            <StackLayout Orientation="Vertical" BindableLayout.ItemsSource="{Binding Path=ContractServerSignatures}" IsVisible="{Binding Path=HasServerSignatures}" >
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Orientation="Horizontal">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Path=DisplayServerSignatureCommand, Source={x:Reference ContractStackLayout}}" />
                            </StackLayout.GestureRecognizers>
                            <Label Text="{Binding Path=Key}" Style="{StaticResource KeyLabel}"/>
                            <Label LineBreakMode="NoWrap" Text="{Binding Path=Value}" Style="{StaticResource ValueLabel}"/>
                        </StackLayout>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </StackLayout>
            <Button Text="{x:Static local:AppResources.ObsoleteContract}" Command="{Binding Path=ObsoleteContractCommand}" IsVisible="{Binding Path=CanDeleteOrObsoleteContract}"/>
            <Button Text="{x:Static local:AppResources.DeleteContract}" Command="{Binding Path=DeleteContractCommand}" IsVisible="{Binding Path=CanDeleteOrObsoleteContract}"/>
        </StackLayout>
    </ScrollView>
</views:ContentBasePage>